---
layout: post
title:  "Netease"
date:   2019-03-21 18:42:17 +0800
---

# 网易游戏技术启示录

* 网易游戏学院（公众号、网站）、网易游戏教程（书）

* [LPV渲染][LPV]，[烘焙][hongbei]

# 0415Review

### 图形学

渲染管线。

> 虽然看了两天还是紧张得有点记不起来……

你说一个像素可能由多个片段的颜色决定，那么是在什么情况下呢？

> 纹理像素的分辨率比屏幕对应分辨率大，很多个纹理像素对应了一个屏幕像素？

是这样吗？

> …………

如果要把三角形变成直线，有什么方法？

> 几何着色器

如果要改变直线的宽度？

> 改变OpenGL的一个状态（我当时不确定是不是glLineWidth()没说出来，现在一查还真是）

说一下抗锯齿？

> 纹理分辨率比屏幕分辨率更大，细节表现不出来。过滤高频信号，保留低频信号。

### C++

引用和指针的区别？

> （指针还好，引用说得挺磕绊的……）

对引用和指针用sizeof()？

> 指针是地址的字节数，引用和引用数据的类型相关。

引用和指针的自加操作有什么用？

> 指针是地址加，比如数组；引用是数据加。

虚函数用过吗？析构函数可以是虚函数吗？为什么要用虚的析构函数？

> 可以。子类成员如果有一些父类没有的成员，如果编译器认为它是父类，析构的时候调用父类的析构函数，那么子类的那部分变量就会得不到释放。

为什么编译器会认为它是父类？

> 一个指针在定义的时候是父类指针，但后来指向了子类……

（按你的说法）指针不是没有类型吗？

> 我有点懵，以为记错了，就用非指针的对象举了例子，说一开始是父类对象，然后赋值给它一个子类，然后面试官说那不对呀，编译会报错，然后我说应该还是指针吧……（复习了一下，的确是指针，指针也有类型的，比如FatherClass *p = new SonClass()，这个p指针的静态类型就是FatherClass，动态类型是SonClass……可以看看另一篇[post]({{ site.baseurl }}{% post_url /Computer /C++ /2019-03-17-C++-Basis %})）

static的作用？

> 在作用域内共享。说了一个类里面静态成员的共享。

如果是函数里面的static局部变量呢？

> 不知道（其实就是存放在内存的全局数据区，函数结束时不会消失，每次调用该函数也不用重新分配空间。静态局部变量和全局变量类似，不过前者只在定义它的函数里面可见。超级基础的东西，居然忘了……）

用过extern吗？说一下

> 可以在一个源文件里面定义，然后在另一个源文件里面引用。

申请内存的大小限制？

> 和堆的大小相关……好像可以自己设置的吧……

那可以无限大吗？

> 应该不可以……不过不知道限制是什么了……（查了一下应该是用户空间3GB，内核空间1GB，所以应该是3GB，需要考证[csdn](https://blog.csdn.net/kang___xi/article/details/79571137)）

说一下虚拟内存？

> （说就是映射，虚拟内存到物理地址需要经过几次映射……没复习说得很差，另外当时意识到这个和前面的那个问题可能相关了）

2D空间，如果要计算AOE技能，给出中心和半径，怎么知道会影响哪些怪？复杂度？

> 先计算正方形里面有多少，然后再对里面的怪和中心的距离……复杂度O(n)吧……

可以优化吗？

> 想不出来……

一个凸多边形，按顺序给出顶点坐标，怎么判断一个点在不在多边形里？

> 按顺序连线，如果点在内部，连线的方向会旋转360度，如果在外面不会，而且连线的方向会发生反转。

怎么知道方向反转？复杂度？

> …………叉乘？前一个连线和当前连线叉乘，方向不一致的话就是反转了。复杂度还是O(n)吧……

可以更快吗？

> …………

提示一下，随便选一个点，然后跟其他所有点连线……

> …………

组成了三角形，可以判断点是不是在其中一个三角形里面……

> （我开始有点明白了）选一个在点左边的，一个在右边的，类似二分查找的方法，找一个包含了该点的三角形……

大概就是这样了，时间复杂度呢？

> O(log n)吧

有什么问题？

> 面试问题可以问吗？

不可以→_→

> 好吧，再见

[LPV]: https://docs.unrealengine.com/en-us/Engine/Rendering/LightingAndShadows/LightPropagationVolumes
[hongbei]: https://docs.blender.org/manual/zh-hans/dev/render/cycles/baking.html
